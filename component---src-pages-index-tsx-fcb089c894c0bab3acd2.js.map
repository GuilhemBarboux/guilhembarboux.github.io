{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/react-seo-component/dist/react-seo-component.esm.js","webpack://gatsby-starter-default/./src/templates/index-template.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"names":["Facebook","_ref","url","type","title","desc","image","locale","Helmet","property","content","Twitter","_ref$type","username","name","titleTemplate","titleSeparator","description","pathname","_ref$article","article","siteLanguage","siteLocale","twitterUsername","_ref$author","author","datePublished","dateModified","seo","slice","Date","now","toISOString","copyrightYear","getFullYear","schemaOrgWebPage","headline","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","itemListElement","item","position","schemaArticle","logo","push","breadcrumb","lang","rel","href","JSON","stringify","Container","Title","props","theme","fonts","header","LinkList","data","target","translations"],"mappings":"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","file":"component---src-pages-index-tsx-fcb089c894c0bab3acd2.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nvar Facebook = function Facebook(_ref) {\n  var url = _ref.url,\n      type = _ref.type,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image,\n      locale = _ref.locale;\n  return React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"og:locale\",\n    content: locale\n  }), React.createElement(\"meta\", {\n    property: \"og:url\",\n    content: url\n  }), React.createElement(\"meta\", {\n    property: \"og:type\",\n    content: type\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    property: \"og:image:alt\",\n    content: desc\n  }));\n};\n\nvar Twitter = function Twitter(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'summary_large_image' : _ref$type,\n      username = _ref.username,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image;\n  return React.createElement(Helmet, null, username && React.createElement(\"meta\", {\n    name: \"twitter:creator\",\n    content: username\n  }), React.createElement(\"meta\", {\n    name: \"twitter:card\",\n    content: type\n  }), React.createElement(\"meta\", {\n    name: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"twitter:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image:alt\",\n    content: desc\n  }));\n};\n\nvar SEO = function SEO(_ref) {\n  var title = _ref.title,\n      titleTemplate = _ref.titleTemplate,\n      titleSeparator = _ref.titleSeparator,\n      description = _ref.description,\n      pathname = _ref.pathname,\n      _ref$article = _ref.article,\n      article = _ref$article === void 0 ? false : _ref$article,\n      image = _ref.image,\n      siteLanguage = _ref.siteLanguage,\n      siteLocale = _ref.siteLocale,\n      twitterUsername = _ref.twitterUsername,\n      _ref$author = _ref.author,\n      author = _ref$author === void 0 ? 'J Doe.' : _ref$author,\n      datePublished = _ref.datePublished,\n      dateModified = _ref.dateModified;\n  var seo = {\n    title: title.slice(0, 70),\n    description: description.slice(0, 160),\n    datePublished: datePublished ? null : new Date(Date.now()).toISOString(),\n    dateModified: dateModified ? null : new Date(Date.now()).toISOString()\n  };\n  var copyrightYear = new Date().getFullYear(); // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n  // Structured Data Testing Tool >>\n  // https://search.google.com/structured-data/testing-tool\n\n  var schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: pathname,\n    headline: seo.description,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: pathname,\n    description: seo.description,\n    name: seo.title,\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightYear: copyrightYear,\n    creator: {\n      '@type': 'Person',\n      name: author\n    },\n    publisher: {\n      '@type': 'Person',\n      name: author\n    },\n    datePublished: seo.datePublished,\n    dateModified: seo.dateModified,\n    image: {\n      '@type': 'ImageObject',\n      url: \"\" + image\n    }\n  }; // Initial breadcrumb list\n\n  var itemListElement = [{\n    '@type': 'ListItem',\n    item: {\n      '@id': pathname,\n      name: 'Homepage'\n    },\n    position: 1\n  }];\n  var schemaArticle = null;\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightYear: copyrightYear,\n      creator: {\n        '@type': 'Person',\n        name: author\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: author,\n        logo: {\n          '@type': 'ImageObject',\n          url: \"\" + image\n        }\n      },\n      datePublished: seo.datePublished,\n      dateModified: seo.dateModified,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: pathname,\n      name: seo.title,\n      image: {\n        '@type': 'ImageObject',\n        url: image\n      },\n      mainEntityOfPage: pathname\n    }; // Push current blog post into breadcrumb list\n\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: seo.title\n      },\n      position: 2\n    });\n  }\n\n  var breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement: itemListElement\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: seo.title,\n    titleTemplate: \"%s \" + (titleSeparator ? titleSeparator : \"\\xB7\") + \" \" + titleTemplate\n  }, React.createElement(\"html\", {\n    lang: siteLanguage ? siteLanguage : 'en'\n  }), React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: pathname\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: seo.description\n  }), !article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaOrgWebPage)), article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaArticle)), React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumb))), image && React.createElement(React.Fragment, null, React.createElement(Facebook, {\n    desc: seo.description,\n    image: image,\n    title: seo.title,\n    type: article ? 'article' : 'website',\n    url: pathname,\n    locale: siteLocale ? siteLocale : 'en_gb'\n  }), React.createElement(Twitter, {\n    title: seo.title,\n    image: image,\n    desc: seo.description,\n    username: twitterUsername\n  })));\n};\n\nexport default SEO;\nexport { Facebook, Twitter };","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport SEO from \"react-seo-component\"\n\ntype Props = {\n  data: {\n    title: string\n    description: string\n    // locale: string\n    // locales: [{ code: string }]\n  }\n}\n\nconst Container = styled.div`\n  height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nconst Title = styled.h1`\n  font-family: ${props => props.theme.fonts.header};\n  text-transform: uppercase;\n  color: white;\n  font-size: 120px;\n  margin-bottom: 0.2em;\n  margin-top: 0;\n  background: #de6161; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #de6161,\n    #2657eb\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #de6161,\n    #2657eb\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  max-width: 300px;\n\n  @media (min-width: 768px) {\n    max-width: none;\n  }\n`\n\nconst LinkList = styled.nav`\n  display: flex;\n  text-transform: uppercase;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: white;\n\n  span {\n    display: none;\n  }\n\n  a,\n  a:focus {\n    color: white;\n    font-size: 14px;\n    margin: 0 15px;\n    padding: 5px;\n    text-decoration: none;\n    transition: all 450ms ease-out;\n\n    &:hover {\n      letter-spacing: 3px;\n    }\n  }\n\n  @media (min-width: 768px) {\n    a {\n      font-size: 18px;\n    }\n    span {\n      display: inline;\n    }\n  }\n`\n\nconst IndexTemplate = ({ data }: Props) => (\n  <Container>\n    <SEO\n      title={\"Freelance\"}\n      titleSeparator={`-`}\n      description={\n        \"Guiilhem Barboux - développeur freenlance, diplomé de Gobelins Paris, qui travaille actuellement sur du Web, 3D et du jeu vidéo\"\n      }\n      image={\"images/bg.png\"}\n      pathname={\"https//guix.dev\"}\n      siteLanguage={\"en\"}\n      siteLocale={\"en\"}\n      twitterUsername={\"@guix_b\"}\n      titleTemplate={\"Guilhem Barboux\"}\n    />\n    <Title>Guix dev</Title>\n    <LinkList>\n      <a target=\"_blank\" href=\"https://www.linkedin.com/in/guilhembarboux/\">\n        Linkedin\n      </a>\n      <span>-</span>\n      <a target=\"_blank\" href=\"https://github.com/GuilhemBarboux\">\n        Github\n      </a>\n      <span>-</span>\n      <a target=\"_blank\" href=\"https://www.malt.fr/profile/guilhembarboux\">\n        Malt\n      </a>\n      <span>-</span>\n      <a target=\"_blank\" href=\"mailto:guilhembarboux@gmail.com\">\n        Email\n      </a>\n    </LinkList>\n  </Container>\n)\n\nexport default IndexTemplate\n","import React from \"react\"\nimport IndexTemplate from \"@src/templates/index-template\"\n// import { useLocalization } from \"gatsby-theme-i18n\"\n\nconst translations = {\n  en: {\n    title: \"Welcome !\",\n    description: \"Amazing Gatsby website with I18N and transitions !\",\n  },\n  fr: {\n    title: \"Bienvenue !\",\n    description: \"Super site utilisant Gatsby, I18N et des transitions !\",\n  },\n}\n\nconst IndexPage = () => {\n  // const { locale, config } = useLocalization()\n  return (\n    <IndexTemplate\n      data={{\n        // locale,\n        // locales: config,\n        // ...translations[locale],\n        ...translations[\"fr\"],\n      }}\n    />\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}